=`Sorting`=
In our sorting, we pass two function as parameters, `fn(x) : any` and `compare(x, y) : number`. We sort the array by comparing each two value resulted from `fn(x)`, where `x`is an element of array.

The default `fn(x): any` is `x => x`, while the default `compare(x, y) : number` is `(x, y) => x - y`.

==Static==
|| *Call* || *Meaning* ||
|| `isSorted(arr, fn, compare): boolean` || gets a boolean value indicating whether arr is sorted under comparing rule for each `fn(element)` ||
|| `quickSort(arr, fn, compare): []` || gets a new sorted array by quick sort ||
|| `mergeSort(arr, fn, compare): []` || gets a new sorted array by merge sort ||
|| `mergeSortBU(arr, fn, compare): []` || gets a new sorted array by bottom-up merge sort ||
|| `heapSort(arr, option): []` || gets a new sorted array by heap sort, `option == {order:'ASC' | 'DESC'}`||